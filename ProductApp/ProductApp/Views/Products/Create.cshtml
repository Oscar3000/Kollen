@model Product
@{
    ViewBag.Title = "Create";
}



@using (Html.BeginForm("Create", "Products", FormMethod.Post, new { enctype="multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="center">
        <h3>Create a product</h3>
        @Html.ValidationSummary("", new { @class = "red-text center mt2 mb2" })
    </div>
    <div class="container z-depth-3">
        <div class="center-block">
            <div class="row">
                <div class="col s12 input-field">
                    @Html.TextBoxFor(m=>m.Name, new { @class= "validate black-text", @onkeyup="CreateProduct()"})
                    @Html.LabelFor(m => m.Name, new { @class = "black-text" })
                </div>
            </div>
            <div class="row">
                <div class="col s6 l6 m6 input-field">
                    <i class="fas fa-dollar-sign prefix"></i>
                    @Html.TextBoxFor(m => m.Price, new { @class= "validate black-text", @type = "number", @onkeyup = "CreateProduct()", @step = "0.01" })
                    @Html.LabelFor(m=>m.Price, new { @class="black-text"})
                </div>
                <div class="col s6 l6 m6 input-field">
                    @Html.TextBoxFor(m => m.Stocks, new { @class = "validate black-text", @type="number", @onkeyup = "CreateProduct()" })
                    @Html.LabelFor(m => m.Stocks, new { @class = "black-text" })
                </div>
            </div>
            <div class="row">
                <div class="col s12 l12 m12 input-field file-field">
                        <div class="btn">
                            <span>File</span>
                            <input type="file" name="picture" id="picture">
                        </div>
                        <div class="file-path-wrapper">
                            <input class="file-path validate" type="text"  onchange="CreateProduct()">
                        </div>
                </div>
            </div>
            <div class="row">
                <div class="col s6 l6 m6 input-field">
                    @Html.DropDownList("ProductType", new SelectList(Enum.GetValues(typeof(ProType))), "Product Type", new { @class = "browser-default", @onchange = "CreateProduct()" })
                </div>
                <div class="col s6 l6 m6 input-field">
                    @Html.DropDownList("Category", new SelectList(Enum.GetValues(typeof(Category))), "Select Category", new { @class = "browser-default", @onchange = "CreateProduct()" })
                </div>
            </div>
            <div class="row">
                <div class="col s6 l6 m6 input-field">
                    @Html.TextBoxFor(m => m.Size, new { @class = "validate black-text", @type = "number", @onkeyup = "CreateProduct()" })
                    @Html.LabelFor(m => m.Size, new { @class = "black-text" })
                </div>
                <div class="col s6 l6 m6">
                    <div class="right">
                        <button type="submit" class="btn btn-large light waves-green disabled" id="CreateProductButton">
                            SUBMIT
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}